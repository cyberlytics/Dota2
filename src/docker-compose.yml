version: '3.4'
services:
  mongodb:
    image: mongo
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 10s
      start_period: 30s
    command:
      --replSet rs0
    logging:
      driver: none

  # # mongodb-seeder:
  # #   build:
  # #     context: ./images/mongo-seeder
  # #   restart: on-failure
  # #   depends_on:
  # #     - mongodb

  jupyter-notebooks:   
    # Notebooks
    build: './images/jupyter-notebooks/'
    volumes:
      - ./images/jupyter-notebooks/:/home/bdcc/
    working_dir: /home/bdcc/
    command:
      jupyter
      notebook
      --ip=0.0.0.0
      --NotebookApp.token=''
      --allow-root
    environment:
      - MONGODB_HOST=mongodb
    ports:
      - "8888:8888"
    depends_on:
      - mongodb
    #   - mongodb-seeder

  jupyter-server:   
    # API
    build: './images/jupyter-notebooks/'
    volumes:
      - ./images/jupyter-notebooks/:/home/bdcc/
    working_dir: /home/bdcc/notebooks/api
    command:
      jupyter
      kernelgateway
      --ip=0.0.0.0
      --KernelGatewayApp.seed_uri=/home/bdcc/notebooks/api/interface.ipynb
      --KernelGatewayApp.api='kernel_gateway.notebook_http'
      --KernelGatewayApp.port=8898
      --KernelGatewayApp.allow_origin='*'
    environment:
      - MONGODB_HOST=mongodb
    ports:
      - "8898:8898"
    depends_on:
      - jupyter-notebooks
      # - mongodb-seeder

  csharp-backend:   
    build:
      context: './images/backend/'
      dockerfile: 'Backend.API/Dockerfile'
    ports:
      - "80:80"
      - "44357:44357"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017
    depends_on:
      - jupyter-server
      # - mongodb-seeder